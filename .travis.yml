language: python

#cahce pip files
cache:
  - pip

git:
  depth: 2

branches:
  only:
    - master
    - /^[vV](\d+\.){1,3}\d+/

env:
 global:
  - GH_REF: "NewFuture/NKUWLAN.git"
  - GIT_URL: "https://${GH_TOKEN}@github.com/${GH_REF}"
  - BUILD_PATH: "build/"
  - NAME: "From-Travis-CI"
  - EMAIL: "github@newfuture.cc"
  - CHANGE: "'git status min.py -s'"
  - EMOJI: "'eval curl -sL https://newfuture.github.io/emoji/e.sh|bash'"

# 安装mimipy
install:
  - pip install minipy-ppf

# 配置git环境
before_script:
  # echo $ID_RSA>t.rsa &&base64 -d t.rsa>~/.ssh/id_rsa &&rm t.rsa &&chmod 600 ~/.ssh/id_rsa
  - git config --global user.name $NAME
  - git config --global user.email $EMAIL
  - git clone -b build "${GIT_URL}" ${BUILD_PATH}

# 编译，检查，压缩，发布
script:
  # build
  - ./build.py ${BUILD_PATH}/nkuwlan.py && cd ${BUILD_PATH}
  # check syntax and minify
  - python -m py_compile nkuwlan.py
      && ./nkuwlan.py -v 
      && minipy -D -R --noselftest -o min.py nkuwlan.py
      && ../build.py min.py min.py
      && python -m py_compile min.py
  # check is runable and push when changed
  - ./min.py -v 
    && if [[ `$CHANGE` ]];then
        git commit -am "`$EMOJI` Auto Build"
        && git push -fq ${GIT_URL} build:build
        && git checkout gh-pages;
      fi

# 同步更新 submodules
after_success:
  - if [ $(git rev-parse --abbrev-ref HEAD) == 'gh-pages' ] ;then
      git submodule update --init --recursive
      && git submodule foreach --recursive git pull origin build
      && git commit -am "`$EMOJI` Auto update Submodule"
      && git push -q "${GIT_URL}" gh-pages:gh-pages;
    fi


# 自动release

before_deploy:
  - "git checkout build"

deploy:
  provider: releases
  api_key: "${GH_TOKEN}"
  file:
    - "nkuwlan.py"
    - "min.py"
  skip_cleanup: true
  on:
    tags: true

notifications:
  email:
    on_failure: change
    on_success: change
